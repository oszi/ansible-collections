#!/bin/bash
# Script to use as "vault password file" or "vault id" for convenient GPG encrypted vault passwords.
set -euo pipefail

GPG="gpg --batch --use-agent --default-recipient-self --yes"

exit_help() {
  echo "# ${0} [--check | --create] [--vault-id=VAULT_ID]" >&2
  echo "# ansible --vault-id=VAULT_ID@${0}" >&2
  exit 1
}

check=0
create=0
vault_id="${ANSIBLE_VAULT_IDENTITY:-default}"
while [[ $# -gt 0 ]]; do
  case $1 in
    --check)
      check=1
      ;;
    --create)
      create=1
      ;;
    --vault-id)
      vault_id="$2"
      shift
      ;;
    --vault-id=*)
      vault_id="${1#*=}"
      ;;
    *)
      exit_help
      ;;
  esac
  shift
done

vault_file="$(dirname "${vault_id}")/.vault-id/$(basename "${vault_id}").asc"

if [ "${create}" -ne 0 ]; then
  if [ "${check}" -ne 0 ]; then
    exit_help
  fi
  echo "Password for vault-id=${vault_id} (${vault_file}): " >&2
  read -s password
  mkdir -p "$(dirname "${vault_file}")"
  echo "${password}" | ${GPG} --encrypt --armor --output "${vault_file}"
  exit $?

elif [ -f "${vault_file}" ]; then
  if [ "${check}" -ne 0 ]; then
    echo "${vault_id}@${0}"
    exit 0
  fi
  ${GPG} --decrypt --quiet --output - "${vault_file}"
  exit $?

else
  echo -e "# ${vault_file} not found..." >&2
  echo -e "# $0 --create --vault-id=${vault_id}" >&2
  exit 1
fi
