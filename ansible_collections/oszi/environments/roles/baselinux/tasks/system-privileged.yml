---
- name: Set system timezone
  when: baselinux_timezone is not none
  community.general.timezone:
    name: "{{ baselinux_timezone }}"

- name: Set system locale
  when: baselinux_set_locale is not none
  ansible.builtin.command: "/usr/bin/localectl set-locale {{ baselinux_set_locale }}"
  changed_when: false

- name: Set custom sysctl parameters
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_set: true
    reload: true
    state: "present"
  with_dict: "{{ baselinux_sysctl_values_default | combine(baselinux_sysctl_values) }}"

- name: Set custom hosts in /etc/hosts
  ansible.builtin.lineinfile:
    dest: "/etc/hosts"
    line: "{{ item.value }}  {{ item.key }}"
    regexp: '\s+{{ item.key | regex_escape }}\s*$'
    state: "present"
  with_dict: "{{ baselinux_etc_hosts }}"

- name: Set system hostname  # after setting /etc/hosts
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: Install custom udev rules
  ansible.builtin.copy:
    dest: "/etc/udev/rules.d/{{ item.key }}.rules"
    content: "{{ item.value }}"
    owner: "root"
    group: "root"
    mode: "0644"
    validate: "udevadm verify %s"
  with_dict: "{{ baselinux_udev_rules }}"

- name: Install custom sudoers rules
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/{{ item.key }}"
    content: "{{ item.value }}"
    owner: "root"
    group: "root"
    mode: "0440"
    validate: "visudo -csf %s"
  with_dict: "{{ baselinux_sudoers_rules }}"

- name: Ensure system mount points exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: "directory"
  ignore_errors: true  # Could be fuse mount point.
  with_items: "{{ baselinux_posix_mounts | map(attribute='path') }}"
  tags: [skip_ansible_lint]

- name: Create system mounts - fstab entries
  ansible.posix.mount:
  args: "{{ item }}"
  with_items: "{{ baselinux_posix_mounts }}"

- name: Ignore DNS settings by DHCP client
  when: baselinux_dhclient_resolvconf_disabled
  ansible.builtin.copy:
    dest: "/etc/dhcp/dhclient-enter-hooks.d/make_resolv_conf"
    content: |
      #!/bin/sh
      make_resolv_conf() {
          :
      }
    owner: "root"
    group: "root"
    mode: "0755"

- name: Enable swapfile if there is no swap partition
  when: "ansible_facts.swaptotal_mb < 1"
  ansible.builtin.systemd:
    name: "swapfile"  # from oszi.general.systemd
    state: "started"
    daemon_reload: true
    enabled: true
