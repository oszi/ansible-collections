---
- name: Validate ACME certificate
  block:
    - name: "Create ACME challenge records - {{ acme_item.common_name }}"
      connection: local
      become: false
      community.general.cloudflare_dns:
        type: "TXT"
        zone: "{{ cloudflare_zone }}"
        record: "{{ _acme_challenge.challenge_data[item]['dns-01']['record'] }}"
        value: '"{{ _acme_challenge.challenge_data[item]["dns-01"]["resource_value"] }}"'
        api_token: "{{ cloudflare_api_token }}"
        state: "present"
      with_items: "{{ _acme_challenge.challenge_data }}"

    - name: "Wait for ACME challenge records replication - {{ acme_item.common_name }}"
      ansible.builtin.pause:
        seconds: "{{ cloudflare_acme_delay_sec }}"

    - name: "Validate ACME challenge - {{ acme_item.common_name }}"
      community.crypto.acme_certificate:
        account_email: "{{ cloudflare_acme_account_email | default(omit) }}"
        account_key: "{{ cloudflare_acme_account_key }}"
        csr: "{{ acme_item.live_path }}/req.csr"
        dest: "{{ acme_item.live_path }}/cert.pem"
        fullchain_dest: "{{ acme_item.live_path }}/fullchain.pem"
        acme_directory: "{{ cloudflare_acme_directory_url }}"
        acme_version: "{{ cloudflare_acme_api_version }}"
        data: "{{ _acme_challenge }}"
        challenge: "dns-01"
        terms_agreed: true
      register: _acme_challenge_validation
      until: "not _acme_challenge_validation.failed"
      retries: "{{ cloudflare_acme_validation_retries }}"
      delay: "{{ cloudflare_acme_delay_sec }}"

    - name: "Run ACME renewal post-hook - {{ acme_item.common_name }}"
      when: "acme_item.post_hook is defined and acme_item.post_hook"
      ansible.builtin.shell: |
        set -euo pipefail
        {{ acme_item.post_hook }}
      args:
        chdir: "{{ acme_item.live_path }}"
        executable: "/bin/bash"
      changed_when: true

    - name: "Run ACME reload command - {{ acme_item.common_name }}"
      when: "acme_item.reload_cmd is defined and acme_item.reload_cmd and cloudflare_acme_reload"
      ansible.builtin.command: "{{ acme_item.reload_cmd }}"
      changed_when: true

  always:
    - name: "Delete ACME challenge records - {{ acme_item.common_name }}"
      connection: local
      become: false
      community.general.cloudflare_dns:
        type: "TXT"
        zone: "{{ cloudflare_zone }}"
        record: "{{ _acme_challenge.challenge_data[item]['dns-01']['record'] }}"
        value: '"{{ _acme_challenge.challenge_data[item]["dns-01"]["resource_value"] }}"'
        api_token: "{{ cloudflare_api_token }}"
        state: "absent"
      with_items: "{{ _acme_challenge.challenge_data }}"
