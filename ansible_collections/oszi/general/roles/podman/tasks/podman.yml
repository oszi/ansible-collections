---
- name: Ensure podman, buildah, skopeo are installed
  ansible.builtin.package:
    name:
      - "podman"
      - "buildah"
      - "skopeo"
    state: "present"

- name: Ensure podman-compose is present or absent
  ansible.builtin.package:
    name: "podman-compose"
    state: "{{ podman_compose_enabled | ternary('present', 'absent') }}"

- name: Ensure toolbox is installed - containertoolbx.org
  ansible.builtin.package:
    name: "{{ (ansible_os_family == 'RedHat') | ternary('toolbox', 'podman-toolbox') }}"
    state: "{{ podman_toolbox_enabled | ternary('present', 'absent') }}"

- name: Change default podman graphroot?
  when: podman_graphroot is not none
  block:
    - name: Change podman graphroot
      community.general.ini_file:
        dest: "/etc/containers/storage.conf"
        section: "storage"
        option: "graphroot"
        value: "{{ podman_graphroot | string | to_json }}"
        owner: "root"
        group: "root"
        mode: "0644"
      register: _ini_file_result

    - name: Set SELinux for new podman graphroot
      ansible.builtin.shell: |
        set -euo pipefail
        mkdir -p -m 0711 {{ podman_graphroot | quote }}
        semanage fcontext -a -e /var/lib/containers/storage {{ podman_graphroot | quote }}
        restorecon -R -v {{ podman_graphroot | quote }}
      args:
        executable: "/bin/bash"
      ignore_errors: true
      when: _ini_file_result.changed
      tags: [skip_ansible_lint]

- name: Configure podman policy.json
  when: podman_config_policy
  ansible.builtin.copy:
    content: "{{ podman_config_policy | to_nice_json }}"
    dest: "{{ podman_config_policy_path }}"
    owner: "root"
    group: "root"
    mode: "0644"

- name: Configure podman containers.conf
  when: podman_config_containers
  ansible.builtin.copy:
    content: "{{ podman_config_containers }}"
    dest: "{{ podman_config_containers_path }}"
    owner: "root"
    group: "root"
    mode: "0644"

- name: Configure podman toolbox.conf
  when: podman_toolbox_enabled and podman_config_toolbox
  ansible.builtin.copy:
    content: "{{ podman_config_toolbox }}"
    dest: "{{ podman_config_toolbox_path }}"
    owner: "root"
    group: "root"
    mode: "0644"

- name: Copy scripts for podman
  ansible.builtin.copy:
    src: "bin/"
    dest: "{{ podman_local_bin_path }}/"
    owner: "root"
    group: "root"
    mode: "0755"

- name: Configure podman networks
  containers.podman.podman_network:
  args: "{{ item.value | combine({'name': item.key}) }}"
  with_dict: "{{ podman_networks }}"
  tags: [skip_ansible_lint]

- name: Manage podman images
  containers.podman.podman_image:
  args: "{{ item }}"
  with_items: "{{ podman_images }}"
  tags: [skip_ansible_lint]
