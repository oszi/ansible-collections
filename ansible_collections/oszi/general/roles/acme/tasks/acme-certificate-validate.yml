---
- name: Validate ACME certificate
  block:
    - name: Include DNS01 provider validation tasks
      when: "acme_challenge_item.challenge_data | length > 0"
      ansible.builtin.include_tasks:
        file: "providers/{{ acme_dns_provider }}/validate.yml"

    - name: "Wait for ACME challenge records replication - {{ acme_certificate_item.common_name }}"
      when: "acme_challenge_item.challenge_data | length > 0"
      ansible.builtin.wait_for:
        timeout: "{{ acme_validation_delay }}"

    - name: "Validate ACME challenge - {{ acme_certificate_item.common_name }}"
      community.crypto.acme_certificate:
        select_crypto_backend: "cryptography"
        account_email: "{{ acme_account_email | default(omit) }}"
        account_key_src: "{{ acme_account_key_path }}"
        account_key_passphrase: "{{ acme_account_key_passphrase }}"
        csr: "{{ acme_certificate_item.live_path }}/req.csr"
        dest: "{{ acme_certificate_item.live_path }}/cert.pem"
        fullchain_dest: "{{ acme_certificate_item.live_path }}/fullchain.pem"
        select_chain: "{{ acme_certificate_item.select_chain | default(omit) }}"
        acme_directory: "{{ acme_directory_url }}"
        acme_version: "{{ acme_api_version }}"
        remaining_days: "{{ acme_certificate_item.remaining_days | default(acme_remaining_days_default) }}"
        force: "{{ acme_request_item.changed }}"
        data: "{{ acme_challenge_item }}"
        challenge: "dns-01"
        modify_account: true
        terms_agreed: true
      register: _acme_challenge_validation
      until: "not _acme_challenge_validation.failed"
      retries: "{{ acme_validation_retries }}"
      delay: "{{ acme_validation_delay }}"

    - name: "Ensure file ownerships for ACME cert and fullchain - {{ acme_certificate_item.common_name }}"
      ansible.builtin.file:
        path: "{{ acme_certificate_item.live_path }}/{{ item }}"
        state: "file"
        owner: "{{ acme_certificate_item.owner }}"
        group: "{{ acme_certificate_item.group }}"
        mode: "0640"
      with_items:
        - "cert.pem"
        - "fullchain.pem"

    - name: "Run ACME renewal post-hook - {{ acme_certificate_item.common_name }}"
      when: "acme_certificate_item.post_hook is defined and acme_certificate_item.post_hook is truthy"
      ansible.builtin.shell: |
        set -euo pipefail
        {{ acme_certificate_item.post_hook }}
      args:
        chdir: "{{ acme_certificate_item.live_path }}"
        executable: "/bin/bash"
      changed_when: true

    - name: "Run ACME reload command - {{ acme_certificate_item.common_name }}"
      when: "acme_certificate_item.reload_cmd is defined and acme_certificate_item.reload_cmd is truthy and acme_reload"
      ansible.builtin.command: "{{ acme_certificate_item.reload_cmd }}"
      changed_when: true
      ignore_errors: "{{ acme_reload_ignore_errors }}"  # noqa: ignore-errors

  always:
    - name: Include DNS01 provider cleanup tasks
      when: "acme_challenge_item.challenge_data | length > 0"
      ansible.builtin.include_tasks:
        file: "providers/{{ acme_dns_provider }}/cleanup.yml"
