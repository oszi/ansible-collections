# shellcheck shell=bash # zsh is unsupported
# shellcheck disable=SC2016,SC2034 # single quotes, variable appears unused

zmodload zsh/datetime

function _prompt_timer_start() {
    prompt_timer_start_rt=${EPOCHREALTIME-}
}

function _prompt_timer_stop() {
    if (( prompt_timer_start_rt )); then
        local -rF rt=$(( EPOCHREALTIME - prompt_timer_start_rt ))
        local -rF s=$(( rt % 60 ))
        local -ri m=$(( (rt / 60) % 60 ))
        local -ri h=$(( rt / 3600 ))

        if (( h >= 1 )); then
            printf -v prompt_timer_elapsed '%ih %im %is' ${h} ${m} ${s}
        elif (( m >= 1 )); then
            printf -v prompt_timer_elapsed '%im %is' ${m} ${s}
        elif (( s >= 1 )); then
            printf -v prompt_timer_elapsed '%.2fs' ${s}
        else
            unset prompt_timer_elapsed
        fi
        unset prompt_timer_start_rt

    else
        unset prompt_timer_elapsed
    fi
}

function _prompt_window_title() {
    print -Pn '\e]0;%n@%m:%~\a'
}

setopt RM_STAR_SILENT # redundant rm -I
setopt PROMPT_SUBST

autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:git:*' actionformats '@%F{yellow}%b|%a%f'
zstyle ':vcs_info:git:*' formats '@%F{yellow}%b%f'

# shellcheck disable=SC2206 # word splitting
precmd_functions=(_prompt_timer_stop ${precmd_functions} _prompt_window_title vcs_info)
preexec_functions+=(_prompt_timer_start)

PROMPT='%F{{ "{red}" if ansible_virtualization_role != "guest"
else "{green}" if "workstations" in group_names
else "{magenta}" if ansible_virtualization_type == "container"
else "{cyan}" }}%n@%m%f'
[[ "$UID" -ne 0 ]] || PROMPT='%S'"$PROMPT"'%s'

PROMPT="$PROMPT"':%F{blue}%1~%f${vcs_info_msg_0_-}%(?..%F{red})%#%f '
RPROMPT='%F{8}${prompt_timer_elapsed-}%f'
