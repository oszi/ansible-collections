---
- name: Flatten package list variables
  ansible.builtin.set_fact:
    libvirt_packages: "{{ libvirt_packages | flatten }}"

- name: Ensure libvirt packages are installed
  ansible.builtin.package:
    name: "{{ libvirt_packages }}"
    state: "present"

- name: Allow host audio without graphics in qemu.conf
  ansible.builtin.lineinfile:
    dest: "/etc/libvirt/qemu.conf"
    line: "nographics_allow_host_audio = 1"
    regexp: '#?\s*nographics_allow_host_audio\s*='
    state: "present"
  notify: "Ensure libvirtd is reloaded"

- name: Copy scripts for libvirt
  ansible.builtin.copy:
    src: "bin/"
    dest: "{{ libvirt_local_bin_path }}/"
    owner: "root"
    group: "root"
    mode: "0755"

- name: Clean up scripts with obsolete .sh extensions
  ansible.builtin.file:
    path: "{{ libvirt_local_bin_path }}/{{ item | basename }}.sh"
    state: "absent"
  with_fileglob: ["bin/*"]

- name: Copy /etc/sudoers.d/libvirt-virsh
  ansible.builtin.copy:
    src: "etc/sudoers.d/libvirt-virsh"
    dest: "/etc/sudoers.d/libvirt-virsh"
    owner: "root"
    group: "root"
    mode: "0440"

- name: Apply libvirt networks
  community.libvirt.virt_net:
  args: "{{ item }}"
  with_items: "{{ libvirt_networks }}"
  tags: [skip_ansible_lint]

- name: Apply libvirt storage pools
  community.libvirt.virt_pool:
  args: "{{ item }}"
  with_items: "{{ libvirt_pools }}"
  tags: [skip_ansible_lint]

- name: Apply libvirt domains
  community.libvirt.virt:
  args: "{{ item }}"
  with_items: "{{ libvirt_domains }}"
  tags: [skip_ansible_lint]
