---
- name: Install the BorgBackup package
  ansible.builtin.package:
    name: "borgbackup"
    state: "present"

- name: Test Borgmatic virtualenv python version
  ansible.builtin.shell: |-
    set -euo pipefail
    test "$({{ borgmatic_virtualenv_path | quote }}/bin/python3 -c {{ print_python_version | quote }})" \
      == "$(python3 -c {{ print_python_version | quote }})"
  args:
    executable: "/bin/bash"
  vars:
    print_python_version: "import sys; print(sys.version_info.major, sys.version_info.minor)"
  register: _borgmatic_venv_version
  changed_when: "_borgmatic_venv_version.rc != 0"
  failed_when: false
  check_mode: false

- name: Remove obsolete Borgmatic virtualenv?
  ansible.builtin.file:
    path: "{{ borgmatic_virtualenv_path }}"
    state: "absent"
  when: "_borgmatic_venv_version.rc != 0"

- name: Install Borgmatic into a virtualenv
  ansible.builtin.pip:
    name: "borgmatic"
    version: "{{ borgmatic_version }}"
    virtualenv: "{{ borgmatic_virtualenv_path }}"
    virtualenv_python: "python3"
    virtualenv_site_packages: true
    state: "present"

- name: Check whether /etc/shrc.d exists
  ansible.builtin.stat:
    path: "/etc/shrc.d"
  register: _etc_shrcd_stat_result

- name: Copy shell aliases for Borgmatic
  when: _etc_shrcd_stat_result.stat.exists
  ansible.builtin.copy:
    src: "etc/shrc.d/borgmatic.sh"
    dest: "/etc/shrc.d/borgmatic.sh"
    owner: "root"
    group: "root"
    mode: "0644"

- name: Include borgmatic configuration tasks
  when: "borgmatic_passphrase and ansible_facts.virtualization_type != 'container'"
  ansible.builtin.include_tasks:
    file: borgmatic-config.yml
